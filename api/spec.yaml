---
openapi: 3.0.2
info:
  title: The video project
  version: 0.0.1
servers:
  - url: http://localhost:5000
components:
  schemas:
    Store:
      description: 店家
      type: object
      properties:
        id:
          type: integer
          example: 12345678
        name:
          type: string
          example: "某個賣吃的店"
        pic:
          type: string
          format: url
          example: https://localhost/stores/121892839139839/pic.png
        status:
          enum:
            - open
            - closed
        opened_at:
          type: string
          format: time
          example: "09:00"
        closed_at:
          type: string
          format: time
          example: "18:00"
    ProductCategory:
      description: 商品分類
      type: object
      properties:
        name:
          description: 分類名
          type: string
          example: 純茶
        items:
          description: 分類下的商品
          type: array
          items:
            $ref: "#/components/schemas/Product"
    Product:
      description: 商品
      type: object
      properties:
        id:
          type: integer
          example: 12345678
        name:
          type: string
          example: 錫蘭紅茶
        price:
          type: number
          example: 30
        description:
          type: string
          example: 以嶄新手法展現傳統精神，為您獻上用頂級台灣茶葉以及匠人精神，搭配絕佳的沖泡時間、溫度，釀出這杯令人難以忘懷的ooxx茶
        selects:
          type: array
          items:
            $ref: "#/components/schemas/SelectQuestion"
        customs:
          type: array
          items:
            $ref: "#/components/schemas/CustomQuestion"
    SelectQuestion:
      description: 客製化問題 (當使用者句選某個選項，需要回傳該選項的 ID)
      type: object
      properties:
        name:
          type: string
          example: 加料
        options:
          type: array
          items:
            $ref: "#/components/schemas/SelectOption"
        required:
          description: 是否必填 (若為 true，可以無視 atMost；若為 false，則需要設定及檢查 atMost 的值)
          type: boolean
          default: false
        atMost:
          description: 最多可以選幾項
          type: number
          example: 3
    SelectOption:
      description: 客製化選項
      type: object
      properties:
        id:
          type: integer
          example: 12345678
        name:
          type: string
          example: 珍珠
        price:
          type: number
          default: 0
          example: 10
    SelectAnswer:
      description: 客製化問題的回答
      type: object
      properties:
        qid:
          type: integer
          example: 12345678
        options:
          type: array
          items:
            type: integer
          default: [1]
          example: [1]
    CustomQuestion:
      description: 額外需求
      type: object
      properties:
        name:
          type: string
          example: 額外需求
        placeholder:
          type: string
          example: 請告訴我們有什麼額外的需求，比如做餐點的時候不能笑之類的
    CustomAnswer:
      description: 額外需求的回答
      type: object
      properties:
        qid:
          type: integer
          example: 12345678
        text:
          type: string
          example: 請在做飲料時不要笑出來，謝謝
    CartItem:
      description: 購物車中的一個商品(資訊)
      type: object
      properties:
        storeId:
          type: integer
          example: 12345678
        productId:
          type: integer
          example: 12345678
        amount:
          type: integer
          example: 1
        selects:
          type: array
          items:
            $ref: "#/components/schemas/SelectAnswer"
        customs:
          type: array
          items:
            $ref: "#/components/schemas/CustomAnswer"
    Order:
      description: 訂單
      type: object
      properties:
        id:
          type: integer
          example: 12345678
        price:
          type: integer
          example: 350
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
        status:
          enum:
            - created
            - preparing
            - ready
            - picked
            - finished
            - cancelled
    User:
      description: 使用者
    Error:
      description: 伺服器錯誤的回應格式
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          default: error
        message:
          type: string
  parameters:
    StoreId:
      in: path
      name: storeId
      description: 店家ID
      schema:
        type: integer
      required: true
    ItemId:
      in: path
      name: itemId
      description: 品項ID
      schema:
        type: integer
      required: true
    OrderId:
      in: path
      name: orderId
      description: 訂單ID
      schema:
        type: integer
      required: true
  responses:
    204NoContent:
      description: 執行成功，不需要回傳資料
    401UnAuthorized:
      description: 沒有登入
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            status: error
            message: 必須先登入才能呼叫這個API
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: cookie
      name: auth
paths:
  /api/registration:
    post:
      tags:
        - 註冊
      description: 註冊
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              email: foobar@not-exist.com
              password: P@sSw0Rd
      responses:
        204:
          $ref: "#/components/responses/204NoContent"
        400:
          description: 無法註冊
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    default: error
                  message:
                    type: string
                  invalid-input-names:
                    type: array
                    items:
                      type: string
              examples:
                invalid-format:
                  value:
                    status: error
                    message: 資料格式驗證發現有誤
                    invalid-input-names:
                      - email
                wrong-email:
                  value:
                    status: error
                    message: 此 Email 沒註冊過
                    invalid-input-names: []
  /api/registration/email-verification:
    post:
      tags:
        - 註冊
      description: 註冊第二步驟：填入信箱驗證碼
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - code
              properties:
                email:
                  type: string
                  format: email
                code:
                  type: string
                  description: 驗證碼
            example:
              email: foobar@not-exist.com
              code: a9s7sd
      responses:
        204:
          $ref: "#/components/responses/204NoContent"
        400:
          description: 驗證信箱時發生錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                wrong-email:
                  value:
                    status: error
                    message: 還沒有人用這個 email 註冊過
                wrong-code:
                  value:
                    status: error
                    message: 驗證碼不對
  /api/forget-password:
    post:
      tags:
        - 忘記密碼
      description: 忘記密碼
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
            example:
              email: foobar@not-exist.com
      responses:
        204:
          description: OK (會寄一封驗證信到信箱，信中帶有連結，連結中有一組 code 會在下一支 API 用到)
        400:
          description: 此 Email 沒註冊過
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                status: error
                message: 此 Email 沒註冊過
  /api/forget-password/reset-password:
    post:
      tags:
        - 忘記密碼
      description: 設定新密碼
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - new-password
              properties:
                code:
                  type: string
                new-password:
                  type: string
                  format: password
            example:
              code: 1ksS92
              new-password: P@sSw0Rd
      responses:
        204:
          $ref: "#/components/responses/204NoContent"
        400:
          description: 無法重設密碼
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                wrong-code:
                  value:
                    status: error
                    message: 驗證碼錯誤
                invalid-password-format:
                  value:
                    status: error
                    message: 密碼不符合指定格式
  /api/is-logged-in:
    get:
      tags:
        - 登入
      description: 是否已經登入
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    default: success
                  isLoggedIn:
                    type: boolean
                    example: false
  /api/login:
    post:
      tags:
        - 登入
      description: 登入，成功的話會取得 cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              email: foobar@not-exist.com
              password: P@sSw0Rd
      responses:
        204:
          description: OK
          headers:
            Set-Cookie:
              description: 設定可以用七天的 Cookie
              schema:
                type: string
                example: "vp=JWTJWTJWT; Max-Age=604800; SameSite=Lax; HttpOnly"
        400:
          description: 帳號或密碼錯誤
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                status: error
                message: 帳號或密碼錯誤
  /api/logout:
    get:
      tags:
        - 登入
      description: 登出
      security:
        - ApiKeyAuth: []
      responses:
        204:
          description: OK
          headers:
            Set-Cookie:
              description: 讓 Cookie 立即過期
              schema:
                type: string
                example: "vp=; Max-Age=0; SameSite=Lax; HttpOnly"
        401:
          $ref: "#/components/responses/401UnAuthorized"
  /api/stores:
    get:
      tags:
        - 首頁
      description: 店家清單
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  stores:
                    type: array
                    items:
                      $ref: "#/components/schemas/Store"
  /api/stores/{storeId}:
    get:
      tags:
        - 店家頁
      description: 取得指定店家的資訊
      parameters:
        - $ref: "#/components/parameters/ItemId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  store:
                    $ref: "#/components/schemas/Store"
                  itemCategories:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductCategory"
        404:
          description: 指定店家不存在
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                status: error
                message: 指定店家不存在
  /api/carts/{storeId}/items:
    get:
      tags:
        - 購物車
      description: 取得購物車中的所有商品
      parameters:
        - $ref: "#/components/parameters/StoreId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CartItem"
    post:
      tags:
        - 購物車
      description: 將商品加入購物車
      requestBody:
        description: 要加入購物車的商品及數量
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                cartItemId: "item-0129830192830912"
  /api/carts/{storeId}/items/{itemId}:
    get:
      tags:
        - 購物車
      description: 「取得」購物車的品項
      parameters:
        - $ref: "#/components/parameters/StoreId"
        - $ref: "#/components/parameters/ItemId"
      responses:
        204:
          description: OK
          $ref: "#/components/responses/204NoContent"
    put:
      tags:
        - 購物車
      description: 「更新」購物車中的一個品項
      parameters:
        - $ref: "#/components/parameters/ItemId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        204:
          description: OK
          $ref: "#/components/responses/204NoContent"
    delete:
      tags:
        - 購物車
      description: 從購物車「移除」一個品項
      parameters:
        - $ref: "#/components/parameters/ItemId"
      responses:
        204:
          description: OK
          $ref: "#/components/responses/204NoContent"
  /api/orders:
    post:
      description: 下訂單
      tags:
        - 購物車
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                orderId: "order-0129830192830912"
  /api/orders/{orderId}/status:
    get:
      description: 取得即時訂單狀態
      tags:
        - 訂單追蹤頁
      parameters:
        - $ref: "#/components/parameters/OrderId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    enum:
                      - created
                      - preparing
                      - ready
                      - picked
                      - finished
                      - cancelled
                    default: created
  /api/orders/{orderId}:
    get:
      description: 取得指定訂單的購物清單
      tags:
        - 訂單管理
      parameters:
        - $ref: "#/components/parameters/OrderId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: "#/components/schemas/Order"
